
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `outfit_suggestions` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model outfit_suggestions
 * 
 */
export type outfit_suggestionsModel = runtime.Types.Result.DefaultSelection<Prisma.$outfit_suggestionsPayload>

export type AggregateOutfit_suggestions = {
  _count: Outfit_suggestionsCountAggregateOutputType | null
  _min: Outfit_suggestionsMinAggregateOutputType | null
  _max: Outfit_suggestionsMaxAggregateOutputType | null
}

export type Outfit_suggestionsMinAggregateOutputType = {
  id: string | null
  userId: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type Outfit_suggestionsMaxAggregateOutputType = {
  id: string | null
  userId: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type Outfit_suggestionsCountAggregateOutputType = {
  id: number
  userId: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type Outfit_suggestionsMinAggregateInputType = {
  id?: true
  userId?: true
  createdAt?: true
  updatedAt?: true
}

export type Outfit_suggestionsMaxAggregateInputType = {
  id?: true
  userId?: true
  createdAt?: true
  updatedAt?: true
}

export type Outfit_suggestionsCountAggregateInputType = {
  id?: true
  userId?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type Outfit_suggestionsAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which outfit_suggestions to aggregate.
   */
  where?: Prisma.outfit_suggestionsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of outfit_suggestions to fetch.
   */
  orderBy?: Prisma.outfit_suggestionsOrderByWithRelationInput | Prisma.outfit_suggestionsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.outfit_suggestionsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` outfit_suggestions from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` outfit_suggestions.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned outfit_suggestions
  **/
  _count?: true | Outfit_suggestionsCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: Outfit_suggestionsMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: Outfit_suggestionsMaxAggregateInputType
}

export type GetOutfit_suggestionsAggregateType<T extends Outfit_suggestionsAggregateArgs> = {
      [P in keyof T & keyof AggregateOutfit_suggestions]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateOutfit_suggestions[P]>
    : Prisma.GetScalarType<T[P], AggregateOutfit_suggestions[P]>
}




export type outfit_suggestionsGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.outfit_suggestionsWhereInput
  orderBy?: Prisma.outfit_suggestionsOrderByWithAggregationInput | Prisma.outfit_suggestionsOrderByWithAggregationInput[]
  by: Prisma.Outfit_suggestionsScalarFieldEnum[] | Prisma.Outfit_suggestionsScalarFieldEnum
  having?: Prisma.outfit_suggestionsScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: Outfit_suggestionsCountAggregateInputType | true
  _min?: Outfit_suggestionsMinAggregateInputType
  _max?: Outfit_suggestionsMaxAggregateInputType
}

export type Outfit_suggestionsGroupByOutputType = {
  id: string
  userId: string
  createdAt: Date
  updatedAt: Date
  _count: Outfit_suggestionsCountAggregateOutputType | null
  _min: Outfit_suggestionsMinAggregateOutputType | null
  _max: Outfit_suggestionsMaxAggregateOutputType | null
}

type GetOutfit_suggestionsGroupByPayload<T extends outfit_suggestionsGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<Outfit_suggestionsGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof Outfit_suggestionsGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], Outfit_suggestionsGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], Outfit_suggestionsGroupByOutputType[P]>
      }
    >
  >



export type outfit_suggestionsWhereInput = {
  AND?: Prisma.outfit_suggestionsWhereInput | Prisma.outfit_suggestionsWhereInput[]
  OR?: Prisma.outfit_suggestionsWhereInput[]
  NOT?: Prisma.outfit_suggestionsWhereInput | Prisma.outfit_suggestionsWhereInput[]
  id?: Prisma.StringFilter<"outfit_suggestions"> | string
  userId?: Prisma.StringFilter<"outfit_suggestions"> | string
  createdAt?: Prisma.DateTimeFilter<"outfit_suggestions"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"outfit_suggestions"> | Date | string
  suggestions?: Prisma.Wardrobe_itemListRelationFilter
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
}

export type outfit_suggestionsOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  suggestions?: Prisma.wardrobe_itemOrderByRelationAggregateInput
  user?: Prisma.UserOrderByWithRelationInput
}

export type outfit_suggestionsWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.outfit_suggestionsWhereInput | Prisma.outfit_suggestionsWhereInput[]
  OR?: Prisma.outfit_suggestionsWhereInput[]
  NOT?: Prisma.outfit_suggestionsWhereInput | Prisma.outfit_suggestionsWhereInput[]
  userId?: Prisma.StringFilter<"outfit_suggestions"> | string
  createdAt?: Prisma.DateTimeFilter<"outfit_suggestions"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"outfit_suggestions"> | Date | string
  suggestions?: Prisma.Wardrobe_itemListRelationFilter
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
}, "id">

export type outfit_suggestionsOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.outfit_suggestionsCountOrderByAggregateInput
  _max?: Prisma.outfit_suggestionsMaxOrderByAggregateInput
  _min?: Prisma.outfit_suggestionsMinOrderByAggregateInput
}

export type outfit_suggestionsScalarWhereWithAggregatesInput = {
  AND?: Prisma.outfit_suggestionsScalarWhereWithAggregatesInput | Prisma.outfit_suggestionsScalarWhereWithAggregatesInput[]
  OR?: Prisma.outfit_suggestionsScalarWhereWithAggregatesInput[]
  NOT?: Prisma.outfit_suggestionsScalarWhereWithAggregatesInput | Prisma.outfit_suggestionsScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"outfit_suggestions"> | string
  userId?: Prisma.StringWithAggregatesFilter<"outfit_suggestions"> | string
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"outfit_suggestions"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"outfit_suggestions"> | Date | string
}

export type outfit_suggestionsCreateInput = {
  id?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  suggestions?: Prisma.wardrobe_itemCreateNestedManyWithoutOutfit_suggestionsInput
  user: Prisma.UserCreateNestedOneWithoutOutfit_suggestionsInput
}

export type outfit_suggestionsUncheckedCreateInput = {
  id?: string
  userId: string
  createdAt?: Date | string
  updatedAt?: Date | string
  suggestions?: Prisma.wardrobe_itemUncheckedCreateNestedManyWithoutOutfit_suggestionsInput
}

export type outfit_suggestionsUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  suggestions?: Prisma.wardrobe_itemUpdateManyWithoutOutfit_suggestionsNestedInput
  user?: Prisma.UserUpdateOneRequiredWithoutOutfit_suggestionsNestedInput
}

export type outfit_suggestionsUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  suggestions?: Prisma.wardrobe_itemUncheckedUpdateManyWithoutOutfit_suggestionsNestedInput
}

export type outfit_suggestionsCreateManyInput = {
  id?: string
  userId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type outfit_suggestionsUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type outfit_suggestionsUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type Outfit_suggestionsListRelationFilter = {
  every?: Prisma.outfit_suggestionsWhereInput
  some?: Prisma.outfit_suggestionsWhereInput
  none?: Prisma.outfit_suggestionsWhereInput
}

export type outfit_suggestionsOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type Outfit_suggestionsNullableScalarRelationFilter = {
  is?: Prisma.outfit_suggestionsWhereInput | null
  isNot?: Prisma.outfit_suggestionsWhereInput | null
}

export type outfit_suggestionsCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type outfit_suggestionsMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type outfit_suggestionsMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type outfit_suggestionsCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.outfit_suggestionsCreateWithoutUserInput, Prisma.outfit_suggestionsUncheckedCreateWithoutUserInput> | Prisma.outfit_suggestionsCreateWithoutUserInput[] | Prisma.outfit_suggestionsUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.outfit_suggestionsCreateOrConnectWithoutUserInput | Prisma.outfit_suggestionsCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.outfit_suggestionsCreateManyUserInputEnvelope
  connect?: Prisma.outfit_suggestionsWhereUniqueInput | Prisma.outfit_suggestionsWhereUniqueInput[]
}

export type outfit_suggestionsUncheckedCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.outfit_suggestionsCreateWithoutUserInput, Prisma.outfit_suggestionsUncheckedCreateWithoutUserInput> | Prisma.outfit_suggestionsCreateWithoutUserInput[] | Prisma.outfit_suggestionsUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.outfit_suggestionsCreateOrConnectWithoutUserInput | Prisma.outfit_suggestionsCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.outfit_suggestionsCreateManyUserInputEnvelope
  connect?: Prisma.outfit_suggestionsWhereUniqueInput | Prisma.outfit_suggestionsWhereUniqueInput[]
}

export type outfit_suggestionsUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.outfit_suggestionsCreateWithoutUserInput, Prisma.outfit_suggestionsUncheckedCreateWithoutUserInput> | Prisma.outfit_suggestionsCreateWithoutUserInput[] | Prisma.outfit_suggestionsUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.outfit_suggestionsCreateOrConnectWithoutUserInput | Prisma.outfit_suggestionsCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.outfit_suggestionsUpsertWithWhereUniqueWithoutUserInput | Prisma.outfit_suggestionsUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.outfit_suggestionsCreateManyUserInputEnvelope
  set?: Prisma.outfit_suggestionsWhereUniqueInput | Prisma.outfit_suggestionsWhereUniqueInput[]
  disconnect?: Prisma.outfit_suggestionsWhereUniqueInput | Prisma.outfit_suggestionsWhereUniqueInput[]
  delete?: Prisma.outfit_suggestionsWhereUniqueInput | Prisma.outfit_suggestionsWhereUniqueInput[]
  connect?: Prisma.outfit_suggestionsWhereUniqueInput | Prisma.outfit_suggestionsWhereUniqueInput[]
  update?: Prisma.outfit_suggestionsUpdateWithWhereUniqueWithoutUserInput | Prisma.outfit_suggestionsUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.outfit_suggestionsUpdateManyWithWhereWithoutUserInput | Prisma.outfit_suggestionsUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.outfit_suggestionsScalarWhereInput | Prisma.outfit_suggestionsScalarWhereInput[]
}

export type outfit_suggestionsUncheckedUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.outfit_suggestionsCreateWithoutUserInput, Prisma.outfit_suggestionsUncheckedCreateWithoutUserInput> | Prisma.outfit_suggestionsCreateWithoutUserInput[] | Prisma.outfit_suggestionsUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.outfit_suggestionsCreateOrConnectWithoutUserInput | Prisma.outfit_suggestionsCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.outfit_suggestionsUpsertWithWhereUniqueWithoutUserInput | Prisma.outfit_suggestionsUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.outfit_suggestionsCreateManyUserInputEnvelope
  set?: Prisma.outfit_suggestionsWhereUniqueInput | Prisma.outfit_suggestionsWhereUniqueInput[]
  disconnect?: Prisma.outfit_suggestionsWhereUniqueInput | Prisma.outfit_suggestionsWhereUniqueInput[]
  delete?: Prisma.outfit_suggestionsWhereUniqueInput | Prisma.outfit_suggestionsWhereUniqueInput[]
  connect?: Prisma.outfit_suggestionsWhereUniqueInput | Prisma.outfit_suggestionsWhereUniqueInput[]
  update?: Prisma.outfit_suggestionsUpdateWithWhereUniqueWithoutUserInput | Prisma.outfit_suggestionsUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.outfit_suggestionsUpdateManyWithWhereWithoutUserInput | Prisma.outfit_suggestionsUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.outfit_suggestionsScalarWhereInput | Prisma.outfit_suggestionsScalarWhereInput[]
}

export type outfit_suggestionsCreateNestedOneWithoutSuggestionsInput = {
  create?: Prisma.XOR<Prisma.outfit_suggestionsCreateWithoutSuggestionsInput, Prisma.outfit_suggestionsUncheckedCreateWithoutSuggestionsInput>
  connectOrCreate?: Prisma.outfit_suggestionsCreateOrConnectWithoutSuggestionsInput
  connect?: Prisma.outfit_suggestionsWhereUniqueInput
}

export type outfit_suggestionsUpdateOneWithoutSuggestionsNestedInput = {
  create?: Prisma.XOR<Prisma.outfit_suggestionsCreateWithoutSuggestionsInput, Prisma.outfit_suggestionsUncheckedCreateWithoutSuggestionsInput>
  connectOrCreate?: Prisma.outfit_suggestionsCreateOrConnectWithoutSuggestionsInput
  upsert?: Prisma.outfit_suggestionsUpsertWithoutSuggestionsInput
  disconnect?: Prisma.outfit_suggestionsWhereInput | boolean
  delete?: Prisma.outfit_suggestionsWhereInput | boolean
  connect?: Prisma.outfit_suggestionsWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.outfit_suggestionsUpdateToOneWithWhereWithoutSuggestionsInput, Prisma.outfit_suggestionsUpdateWithoutSuggestionsInput>, Prisma.outfit_suggestionsUncheckedUpdateWithoutSuggestionsInput>
}

export type outfit_suggestionsCreateWithoutUserInput = {
  id?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  suggestions?: Prisma.wardrobe_itemCreateNestedManyWithoutOutfit_suggestionsInput
}

export type outfit_suggestionsUncheckedCreateWithoutUserInput = {
  id?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  suggestions?: Prisma.wardrobe_itemUncheckedCreateNestedManyWithoutOutfit_suggestionsInput
}

export type outfit_suggestionsCreateOrConnectWithoutUserInput = {
  where: Prisma.outfit_suggestionsWhereUniqueInput
  create: Prisma.XOR<Prisma.outfit_suggestionsCreateWithoutUserInput, Prisma.outfit_suggestionsUncheckedCreateWithoutUserInput>
}

export type outfit_suggestionsCreateManyUserInputEnvelope = {
  data: Prisma.outfit_suggestionsCreateManyUserInput | Prisma.outfit_suggestionsCreateManyUserInput[]
  skipDuplicates?: boolean
}

export type outfit_suggestionsUpsertWithWhereUniqueWithoutUserInput = {
  where: Prisma.outfit_suggestionsWhereUniqueInput
  update: Prisma.XOR<Prisma.outfit_suggestionsUpdateWithoutUserInput, Prisma.outfit_suggestionsUncheckedUpdateWithoutUserInput>
  create: Prisma.XOR<Prisma.outfit_suggestionsCreateWithoutUserInput, Prisma.outfit_suggestionsUncheckedCreateWithoutUserInput>
}

export type outfit_suggestionsUpdateWithWhereUniqueWithoutUserInput = {
  where: Prisma.outfit_suggestionsWhereUniqueInput
  data: Prisma.XOR<Prisma.outfit_suggestionsUpdateWithoutUserInput, Prisma.outfit_suggestionsUncheckedUpdateWithoutUserInput>
}

export type outfit_suggestionsUpdateManyWithWhereWithoutUserInput = {
  where: Prisma.outfit_suggestionsScalarWhereInput
  data: Prisma.XOR<Prisma.outfit_suggestionsUpdateManyMutationInput, Prisma.outfit_suggestionsUncheckedUpdateManyWithoutUserInput>
}

export type outfit_suggestionsScalarWhereInput = {
  AND?: Prisma.outfit_suggestionsScalarWhereInput | Prisma.outfit_suggestionsScalarWhereInput[]
  OR?: Prisma.outfit_suggestionsScalarWhereInput[]
  NOT?: Prisma.outfit_suggestionsScalarWhereInput | Prisma.outfit_suggestionsScalarWhereInput[]
  id?: Prisma.StringFilter<"outfit_suggestions"> | string
  userId?: Prisma.StringFilter<"outfit_suggestions"> | string
  createdAt?: Prisma.DateTimeFilter<"outfit_suggestions"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"outfit_suggestions"> | Date | string
}

export type outfit_suggestionsCreateWithoutSuggestionsInput = {
  id?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  user: Prisma.UserCreateNestedOneWithoutOutfit_suggestionsInput
}

export type outfit_suggestionsUncheckedCreateWithoutSuggestionsInput = {
  id?: string
  userId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type outfit_suggestionsCreateOrConnectWithoutSuggestionsInput = {
  where: Prisma.outfit_suggestionsWhereUniqueInput
  create: Prisma.XOR<Prisma.outfit_suggestionsCreateWithoutSuggestionsInput, Prisma.outfit_suggestionsUncheckedCreateWithoutSuggestionsInput>
}

export type outfit_suggestionsUpsertWithoutSuggestionsInput = {
  update: Prisma.XOR<Prisma.outfit_suggestionsUpdateWithoutSuggestionsInput, Prisma.outfit_suggestionsUncheckedUpdateWithoutSuggestionsInput>
  create: Prisma.XOR<Prisma.outfit_suggestionsCreateWithoutSuggestionsInput, Prisma.outfit_suggestionsUncheckedCreateWithoutSuggestionsInput>
  where?: Prisma.outfit_suggestionsWhereInput
}

export type outfit_suggestionsUpdateToOneWithWhereWithoutSuggestionsInput = {
  where?: Prisma.outfit_suggestionsWhereInput
  data: Prisma.XOR<Prisma.outfit_suggestionsUpdateWithoutSuggestionsInput, Prisma.outfit_suggestionsUncheckedUpdateWithoutSuggestionsInput>
}

export type outfit_suggestionsUpdateWithoutSuggestionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  user?: Prisma.UserUpdateOneRequiredWithoutOutfit_suggestionsNestedInput
}

export type outfit_suggestionsUncheckedUpdateWithoutSuggestionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type outfit_suggestionsCreateManyUserInput = {
  id?: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type outfit_suggestionsUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  suggestions?: Prisma.wardrobe_itemUpdateManyWithoutOutfit_suggestionsNestedInput
}

export type outfit_suggestionsUncheckedUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  suggestions?: Prisma.wardrobe_itemUncheckedUpdateManyWithoutOutfit_suggestionsNestedInput
}

export type outfit_suggestionsUncheckedUpdateManyWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}


/**
 * Count Type Outfit_suggestionsCountOutputType
 */

export type Outfit_suggestionsCountOutputType = {
  suggestions: number
}

export type Outfit_suggestionsCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  suggestions?: boolean | Outfit_suggestionsCountOutputTypeCountSuggestionsArgs
}

/**
 * Outfit_suggestionsCountOutputType without action
 */
export type Outfit_suggestionsCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Outfit_suggestionsCountOutputType
   */
  select?: Prisma.Outfit_suggestionsCountOutputTypeSelect<ExtArgs> | null
}

/**
 * Outfit_suggestionsCountOutputType without action
 */
export type Outfit_suggestionsCountOutputTypeCountSuggestionsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.wardrobe_itemWhereInput
}


export type outfit_suggestionsSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  userId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  suggestions?: boolean | Prisma.outfit_suggestions$suggestionsArgs<ExtArgs>
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  _count?: boolean | Prisma.Outfit_suggestionsCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["outfit_suggestions"]>

export type outfit_suggestionsSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  userId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["outfit_suggestions"]>

export type outfit_suggestionsSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  userId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["outfit_suggestions"]>

export type outfit_suggestionsSelectScalar = {
  id?: boolean
  userId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type outfit_suggestionsOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "userId" | "createdAt" | "updatedAt", ExtArgs["result"]["outfit_suggestions"]>
export type outfit_suggestionsInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  suggestions?: boolean | Prisma.outfit_suggestions$suggestionsArgs<ExtArgs>
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  _count?: boolean | Prisma.Outfit_suggestionsCountOutputTypeDefaultArgs<ExtArgs>
}
export type outfit_suggestionsIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}
export type outfit_suggestionsIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}

export type $outfit_suggestionsPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "outfit_suggestions"
  objects: {
    suggestions: Prisma.$wardrobe_itemPayload<ExtArgs>[]
    user: Prisma.$UserPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    userId: string
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["outfit_suggestions"]>
  composites: {}
}

export type outfit_suggestionsGetPayload<S extends boolean | null | undefined | outfit_suggestionsDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$outfit_suggestionsPayload, S>

export type outfit_suggestionsCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<outfit_suggestionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: Outfit_suggestionsCountAggregateInputType | true
  }

export interface outfit_suggestionsDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['outfit_suggestions'], meta: { name: 'outfit_suggestions' } }
  /**
   * Find zero or one Outfit_suggestions that matches the filter.
   * @param {outfit_suggestionsFindUniqueArgs} args - Arguments to find a Outfit_suggestions
   * @example
   * // Get one Outfit_suggestions
   * const outfit_suggestions = await prisma.outfit_suggestions.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends outfit_suggestionsFindUniqueArgs>(args: Prisma.SelectSubset<T, outfit_suggestionsFindUniqueArgs<ExtArgs>>): Prisma.Prisma__outfit_suggestionsClient<runtime.Types.Result.GetResult<Prisma.$outfit_suggestionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Outfit_suggestions that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {outfit_suggestionsFindUniqueOrThrowArgs} args - Arguments to find a Outfit_suggestions
   * @example
   * // Get one Outfit_suggestions
   * const outfit_suggestions = await prisma.outfit_suggestions.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends outfit_suggestionsFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, outfit_suggestionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__outfit_suggestionsClient<runtime.Types.Result.GetResult<Prisma.$outfit_suggestionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Outfit_suggestions that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {outfit_suggestionsFindFirstArgs} args - Arguments to find a Outfit_suggestions
   * @example
   * // Get one Outfit_suggestions
   * const outfit_suggestions = await prisma.outfit_suggestions.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends outfit_suggestionsFindFirstArgs>(args?: Prisma.SelectSubset<T, outfit_suggestionsFindFirstArgs<ExtArgs>>): Prisma.Prisma__outfit_suggestionsClient<runtime.Types.Result.GetResult<Prisma.$outfit_suggestionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Outfit_suggestions that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {outfit_suggestionsFindFirstOrThrowArgs} args - Arguments to find a Outfit_suggestions
   * @example
   * // Get one Outfit_suggestions
   * const outfit_suggestions = await prisma.outfit_suggestions.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends outfit_suggestionsFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, outfit_suggestionsFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__outfit_suggestionsClient<runtime.Types.Result.GetResult<Prisma.$outfit_suggestionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Outfit_suggestions that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {outfit_suggestionsFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Outfit_suggestions
   * const outfit_suggestions = await prisma.outfit_suggestions.findMany()
   * 
   * // Get first 10 Outfit_suggestions
   * const outfit_suggestions = await prisma.outfit_suggestions.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const outfit_suggestionsWithIdOnly = await prisma.outfit_suggestions.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends outfit_suggestionsFindManyArgs>(args?: Prisma.SelectSubset<T, outfit_suggestionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$outfit_suggestionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Outfit_suggestions.
   * @param {outfit_suggestionsCreateArgs} args - Arguments to create a Outfit_suggestions.
   * @example
   * // Create one Outfit_suggestions
   * const Outfit_suggestions = await prisma.outfit_suggestions.create({
   *   data: {
   *     // ... data to create a Outfit_suggestions
   *   }
   * })
   * 
   */
  create<T extends outfit_suggestionsCreateArgs>(args: Prisma.SelectSubset<T, outfit_suggestionsCreateArgs<ExtArgs>>): Prisma.Prisma__outfit_suggestionsClient<runtime.Types.Result.GetResult<Prisma.$outfit_suggestionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Outfit_suggestions.
   * @param {outfit_suggestionsCreateManyArgs} args - Arguments to create many Outfit_suggestions.
   * @example
   * // Create many Outfit_suggestions
   * const outfit_suggestions = await prisma.outfit_suggestions.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends outfit_suggestionsCreateManyArgs>(args?: Prisma.SelectSubset<T, outfit_suggestionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Outfit_suggestions and returns the data saved in the database.
   * @param {outfit_suggestionsCreateManyAndReturnArgs} args - Arguments to create many Outfit_suggestions.
   * @example
   * // Create many Outfit_suggestions
   * const outfit_suggestions = await prisma.outfit_suggestions.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Outfit_suggestions and only return the `id`
   * const outfit_suggestionsWithIdOnly = await prisma.outfit_suggestions.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends outfit_suggestionsCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, outfit_suggestionsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$outfit_suggestionsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Outfit_suggestions.
   * @param {outfit_suggestionsDeleteArgs} args - Arguments to delete one Outfit_suggestions.
   * @example
   * // Delete one Outfit_suggestions
   * const Outfit_suggestions = await prisma.outfit_suggestions.delete({
   *   where: {
   *     // ... filter to delete one Outfit_suggestions
   *   }
   * })
   * 
   */
  delete<T extends outfit_suggestionsDeleteArgs>(args: Prisma.SelectSubset<T, outfit_suggestionsDeleteArgs<ExtArgs>>): Prisma.Prisma__outfit_suggestionsClient<runtime.Types.Result.GetResult<Prisma.$outfit_suggestionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Outfit_suggestions.
   * @param {outfit_suggestionsUpdateArgs} args - Arguments to update one Outfit_suggestions.
   * @example
   * // Update one Outfit_suggestions
   * const outfit_suggestions = await prisma.outfit_suggestions.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends outfit_suggestionsUpdateArgs>(args: Prisma.SelectSubset<T, outfit_suggestionsUpdateArgs<ExtArgs>>): Prisma.Prisma__outfit_suggestionsClient<runtime.Types.Result.GetResult<Prisma.$outfit_suggestionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Outfit_suggestions.
   * @param {outfit_suggestionsDeleteManyArgs} args - Arguments to filter Outfit_suggestions to delete.
   * @example
   * // Delete a few Outfit_suggestions
   * const { count } = await prisma.outfit_suggestions.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends outfit_suggestionsDeleteManyArgs>(args?: Prisma.SelectSubset<T, outfit_suggestionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Outfit_suggestions.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {outfit_suggestionsUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Outfit_suggestions
   * const outfit_suggestions = await prisma.outfit_suggestions.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends outfit_suggestionsUpdateManyArgs>(args: Prisma.SelectSubset<T, outfit_suggestionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Outfit_suggestions and returns the data updated in the database.
   * @param {outfit_suggestionsUpdateManyAndReturnArgs} args - Arguments to update many Outfit_suggestions.
   * @example
   * // Update many Outfit_suggestions
   * const outfit_suggestions = await prisma.outfit_suggestions.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Outfit_suggestions and only return the `id`
   * const outfit_suggestionsWithIdOnly = await prisma.outfit_suggestions.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends outfit_suggestionsUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, outfit_suggestionsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$outfit_suggestionsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Outfit_suggestions.
   * @param {outfit_suggestionsUpsertArgs} args - Arguments to update or create a Outfit_suggestions.
   * @example
   * // Update or create a Outfit_suggestions
   * const outfit_suggestions = await prisma.outfit_suggestions.upsert({
   *   create: {
   *     // ... data to create a Outfit_suggestions
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Outfit_suggestions we want to update
   *   }
   * })
   */
  upsert<T extends outfit_suggestionsUpsertArgs>(args: Prisma.SelectSubset<T, outfit_suggestionsUpsertArgs<ExtArgs>>): Prisma.Prisma__outfit_suggestionsClient<runtime.Types.Result.GetResult<Prisma.$outfit_suggestionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Outfit_suggestions.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {outfit_suggestionsCountArgs} args - Arguments to filter Outfit_suggestions to count.
   * @example
   * // Count the number of Outfit_suggestions
   * const count = await prisma.outfit_suggestions.count({
   *   where: {
   *     // ... the filter for the Outfit_suggestions we want to count
   *   }
   * })
  **/
  count<T extends outfit_suggestionsCountArgs>(
    args?: Prisma.Subset<T, outfit_suggestionsCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], Outfit_suggestionsCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Outfit_suggestions.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {Outfit_suggestionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends Outfit_suggestionsAggregateArgs>(args: Prisma.Subset<T, Outfit_suggestionsAggregateArgs>): Prisma.PrismaPromise<GetOutfit_suggestionsAggregateType<T>>

  /**
   * Group by Outfit_suggestions.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {outfit_suggestionsGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends outfit_suggestionsGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: outfit_suggestionsGroupByArgs['orderBy'] }
      : { orderBy?: outfit_suggestionsGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, outfit_suggestionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOutfit_suggestionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the outfit_suggestions model
 */
readonly fields: outfit_suggestionsFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for outfit_suggestions.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__outfit_suggestionsClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  suggestions<T extends Prisma.outfit_suggestions$suggestionsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.outfit_suggestions$suggestionsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$wardrobe_itemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  user<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the outfit_suggestions model
 */
export interface outfit_suggestionsFieldRefs {
  readonly id: Prisma.FieldRef<"outfit_suggestions", 'String'>
  readonly userId: Prisma.FieldRef<"outfit_suggestions", 'String'>
  readonly createdAt: Prisma.FieldRef<"outfit_suggestions", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"outfit_suggestions", 'DateTime'>
}
    

// Custom InputTypes
/**
 * outfit_suggestions findUnique
 */
export type outfit_suggestionsFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the outfit_suggestions
   */
  select?: Prisma.outfit_suggestionsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the outfit_suggestions
   */
  omit?: Prisma.outfit_suggestionsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.outfit_suggestionsInclude<ExtArgs> | null
  /**
   * Filter, which outfit_suggestions to fetch.
   */
  where: Prisma.outfit_suggestionsWhereUniqueInput
}

/**
 * outfit_suggestions findUniqueOrThrow
 */
export type outfit_suggestionsFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the outfit_suggestions
   */
  select?: Prisma.outfit_suggestionsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the outfit_suggestions
   */
  omit?: Prisma.outfit_suggestionsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.outfit_suggestionsInclude<ExtArgs> | null
  /**
   * Filter, which outfit_suggestions to fetch.
   */
  where: Prisma.outfit_suggestionsWhereUniqueInput
}

/**
 * outfit_suggestions findFirst
 */
export type outfit_suggestionsFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the outfit_suggestions
   */
  select?: Prisma.outfit_suggestionsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the outfit_suggestions
   */
  omit?: Prisma.outfit_suggestionsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.outfit_suggestionsInclude<ExtArgs> | null
  /**
   * Filter, which outfit_suggestions to fetch.
   */
  where?: Prisma.outfit_suggestionsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of outfit_suggestions to fetch.
   */
  orderBy?: Prisma.outfit_suggestionsOrderByWithRelationInput | Prisma.outfit_suggestionsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for outfit_suggestions.
   */
  cursor?: Prisma.outfit_suggestionsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` outfit_suggestions from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` outfit_suggestions.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of outfit_suggestions.
   */
  distinct?: Prisma.Outfit_suggestionsScalarFieldEnum | Prisma.Outfit_suggestionsScalarFieldEnum[]
}

/**
 * outfit_suggestions findFirstOrThrow
 */
export type outfit_suggestionsFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the outfit_suggestions
   */
  select?: Prisma.outfit_suggestionsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the outfit_suggestions
   */
  omit?: Prisma.outfit_suggestionsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.outfit_suggestionsInclude<ExtArgs> | null
  /**
   * Filter, which outfit_suggestions to fetch.
   */
  where?: Prisma.outfit_suggestionsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of outfit_suggestions to fetch.
   */
  orderBy?: Prisma.outfit_suggestionsOrderByWithRelationInput | Prisma.outfit_suggestionsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for outfit_suggestions.
   */
  cursor?: Prisma.outfit_suggestionsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` outfit_suggestions from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` outfit_suggestions.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of outfit_suggestions.
   */
  distinct?: Prisma.Outfit_suggestionsScalarFieldEnum | Prisma.Outfit_suggestionsScalarFieldEnum[]
}

/**
 * outfit_suggestions findMany
 */
export type outfit_suggestionsFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the outfit_suggestions
   */
  select?: Prisma.outfit_suggestionsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the outfit_suggestions
   */
  omit?: Prisma.outfit_suggestionsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.outfit_suggestionsInclude<ExtArgs> | null
  /**
   * Filter, which outfit_suggestions to fetch.
   */
  where?: Prisma.outfit_suggestionsWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of outfit_suggestions to fetch.
   */
  orderBy?: Prisma.outfit_suggestionsOrderByWithRelationInput | Prisma.outfit_suggestionsOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing outfit_suggestions.
   */
  cursor?: Prisma.outfit_suggestionsWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` outfit_suggestions from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` outfit_suggestions.
   */
  skip?: number
  distinct?: Prisma.Outfit_suggestionsScalarFieldEnum | Prisma.Outfit_suggestionsScalarFieldEnum[]
}

/**
 * outfit_suggestions create
 */
export type outfit_suggestionsCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the outfit_suggestions
   */
  select?: Prisma.outfit_suggestionsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the outfit_suggestions
   */
  omit?: Prisma.outfit_suggestionsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.outfit_suggestionsInclude<ExtArgs> | null
  /**
   * The data needed to create a outfit_suggestions.
   */
  data: Prisma.XOR<Prisma.outfit_suggestionsCreateInput, Prisma.outfit_suggestionsUncheckedCreateInput>
}

/**
 * outfit_suggestions createMany
 */
export type outfit_suggestionsCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many outfit_suggestions.
   */
  data: Prisma.outfit_suggestionsCreateManyInput | Prisma.outfit_suggestionsCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * outfit_suggestions createManyAndReturn
 */
export type outfit_suggestionsCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the outfit_suggestions
   */
  select?: Prisma.outfit_suggestionsSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the outfit_suggestions
   */
  omit?: Prisma.outfit_suggestionsOmit<ExtArgs> | null
  /**
   * The data used to create many outfit_suggestions.
   */
  data: Prisma.outfit_suggestionsCreateManyInput | Prisma.outfit_suggestionsCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.outfit_suggestionsIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * outfit_suggestions update
 */
export type outfit_suggestionsUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the outfit_suggestions
   */
  select?: Prisma.outfit_suggestionsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the outfit_suggestions
   */
  omit?: Prisma.outfit_suggestionsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.outfit_suggestionsInclude<ExtArgs> | null
  /**
   * The data needed to update a outfit_suggestions.
   */
  data: Prisma.XOR<Prisma.outfit_suggestionsUpdateInput, Prisma.outfit_suggestionsUncheckedUpdateInput>
  /**
   * Choose, which outfit_suggestions to update.
   */
  where: Prisma.outfit_suggestionsWhereUniqueInput
}

/**
 * outfit_suggestions updateMany
 */
export type outfit_suggestionsUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update outfit_suggestions.
   */
  data: Prisma.XOR<Prisma.outfit_suggestionsUpdateManyMutationInput, Prisma.outfit_suggestionsUncheckedUpdateManyInput>
  /**
   * Filter which outfit_suggestions to update
   */
  where?: Prisma.outfit_suggestionsWhereInput
  /**
   * Limit how many outfit_suggestions to update.
   */
  limit?: number
}

/**
 * outfit_suggestions updateManyAndReturn
 */
export type outfit_suggestionsUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the outfit_suggestions
   */
  select?: Prisma.outfit_suggestionsSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the outfit_suggestions
   */
  omit?: Prisma.outfit_suggestionsOmit<ExtArgs> | null
  /**
   * The data used to update outfit_suggestions.
   */
  data: Prisma.XOR<Prisma.outfit_suggestionsUpdateManyMutationInput, Prisma.outfit_suggestionsUncheckedUpdateManyInput>
  /**
   * Filter which outfit_suggestions to update
   */
  where?: Prisma.outfit_suggestionsWhereInput
  /**
   * Limit how many outfit_suggestions to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.outfit_suggestionsIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * outfit_suggestions upsert
 */
export type outfit_suggestionsUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the outfit_suggestions
   */
  select?: Prisma.outfit_suggestionsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the outfit_suggestions
   */
  omit?: Prisma.outfit_suggestionsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.outfit_suggestionsInclude<ExtArgs> | null
  /**
   * The filter to search for the outfit_suggestions to update in case it exists.
   */
  where: Prisma.outfit_suggestionsWhereUniqueInput
  /**
   * In case the outfit_suggestions found by the `where` argument doesn't exist, create a new outfit_suggestions with this data.
   */
  create: Prisma.XOR<Prisma.outfit_suggestionsCreateInput, Prisma.outfit_suggestionsUncheckedCreateInput>
  /**
   * In case the outfit_suggestions was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.outfit_suggestionsUpdateInput, Prisma.outfit_suggestionsUncheckedUpdateInput>
}

/**
 * outfit_suggestions delete
 */
export type outfit_suggestionsDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the outfit_suggestions
   */
  select?: Prisma.outfit_suggestionsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the outfit_suggestions
   */
  omit?: Prisma.outfit_suggestionsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.outfit_suggestionsInclude<ExtArgs> | null
  /**
   * Filter which outfit_suggestions to delete.
   */
  where: Prisma.outfit_suggestionsWhereUniqueInput
}

/**
 * outfit_suggestions deleteMany
 */
export type outfit_suggestionsDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which outfit_suggestions to delete
   */
  where?: Prisma.outfit_suggestionsWhereInput
  /**
   * Limit how many outfit_suggestions to delete.
   */
  limit?: number
}

/**
 * outfit_suggestions.suggestions
 */
export type outfit_suggestions$suggestionsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wardrobe_item
   */
  select?: Prisma.wardrobe_itemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the wardrobe_item
   */
  omit?: Prisma.wardrobe_itemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.wardrobe_itemInclude<ExtArgs> | null
  where?: Prisma.wardrobe_itemWhereInput
  orderBy?: Prisma.wardrobe_itemOrderByWithRelationInput | Prisma.wardrobe_itemOrderByWithRelationInput[]
  cursor?: Prisma.wardrobe_itemWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.Wardrobe_itemScalarFieldEnum | Prisma.Wardrobe_itemScalarFieldEnum[]
}

/**
 * outfit_suggestions without action
 */
export type outfit_suggestionsDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the outfit_suggestions
   */
  select?: Prisma.outfit_suggestionsSelect<ExtArgs> | null
  /**
   * Omit specific fields from the outfit_suggestions
   */
  omit?: Prisma.outfit_suggestionsOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.outfit_suggestionsInclude<ExtArgs> | null
}
