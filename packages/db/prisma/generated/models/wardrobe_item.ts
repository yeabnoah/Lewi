
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `wardrobe_item` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model wardrobe_item
 * 
 */
export type wardrobe_itemModel = runtime.Types.Result.DefaultSelection<Prisma.$wardrobe_itemPayload>

export type AggregateWardrobe_item = {
  _count: Wardrobe_itemCountAggregateOutputType | null
  _min: Wardrobe_itemMinAggregateOutputType | null
  _max: Wardrobe_itemMaxAggregateOutputType | null
}

export type Wardrobe_itemMinAggregateOutputType = {
  id: string | null
  name: string | null
  description: string | null
  imageUrl: string | null
  userId: string | null
  createdAt: Date | null
  updatedAt: Date | null
  color: string | null
  wardrobeCategory: $Enums.WardrobeCategory | null
}

export type Wardrobe_itemMaxAggregateOutputType = {
  id: string | null
  name: string | null
  description: string | null
  imageUrl: string | null
  userId: string | null
  createdAt: Date | null
  updatedAt: Date | null
  color: string | null
  wardrobeCategory: $Enums.WardrobeCategory | null
}

export type Wardrobe_itemCountAggregateOutputType = {
  id: number
  name: number
  description: number
  imageUrl: number
  userId: number
  createdAt: number
  updatedAt: number
  color: number
  wardrobeCategory: number
  _all: number
}


export type Wardrobe_itemMinAggregateInputType = {
  id?: true
  name?: true
  description?: true
  imageUrl?: true
  userId?: true
  createdAt?: true
  updatedAt?: true
  color?: true
  wardrobeCategory?: true
}

export type Wardrobe_itemMaxAggregateInputType = {
  id?: true
  name?: true
  description?: true
  imageUrl?: true
  userId?: true
  createdAt?: true
  updatedAt?: true
  color?: true
  wardrobeCategory?: true
}

export type Wardrobe_itemCountAggregateInputType = {
  id?: true
  name?: true
  description?: true
  imageUrl?: true
  userId?: true
  createdAt?: true
  updatedAt?: true
  color?: true
  wardrobeCategory?: true
  _all?: true
}

export type Wardrobe_itemAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which wardrobe_item to aggregate.
   */
  where?: Prisma.wardrobe_itemWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of wardrobe_items to fetch.
   */
  orderBy?: Prisma.wardrobe_itemOrderByWithRelationInput | Prisma.wardrobe_itemOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.wardrobe_itemWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` wardrobe_items from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` wardrobe_items.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned wardrobe_items
  **/
  _count?: true | Wardrobe_itemCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: Wardrobe_itemMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: Wardrobe_itemMaxAggregateInputType
}

export type GetWardrobe_itemAggregateType<T extends Wardrobe_itemAggregateArgs> = {
      [P in keyof T & keyof AggregateWardrobe_item]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateWardrobe_item[P]>
    : Prisma.GetScalarType<T[P], AggregateWardrobe_item[P]>
}




export type wardrobe_itemGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.wardrobe_itemWhereInput
  orderBy?: Prisma.wardrobe_itemOrderByWithAggregationInput | Prisma.wardrobe_itemOrderByWithAggregationInput[]
  by: Prisma.Wardrobe_itemScalarFieldEnum[] | Prisma.Wardrobe_itemScalarFieldEnum
  having?: Prisma.wardrobe_itemScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: Wardrobe_itemCountAggregateInputType | true
  _min?: Wardrobe_itemMinAggregateInputType
  _max?: Wardrobe_itemMaxAggregateInputType
}

export type Wardrobe_itemGroupByOutputType = {
  id: string
  name: string
  description: string
  imageUrl: string
  userId: string
  createdAt: Date
  updatedAt: Date
  color: string
  wardrobeCategory: $Enums.WardrobeCategory
  _count: Wardrobe_itemCountAggregateOutputType | null
  _min: Wardrobe_itemMinAggregateOutputType | null
  _max: Wardrobe_itemMaxAggregateOutputType | null
}

type GetWardrobe_itemGroupByPayload<T extends wardrobe_itemGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<Wardrobe_itemGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof Wardrobe_itemGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], Wardrobe_itemGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], Wardrobe_itemGroupByOutputType[P]>
      }
    >
  >



export type wardrobe_itemWhereInput = {
  AND?: Prisma.wardrobe_itemWhereInput | Prisma.wardrobe_itemWhereInput[]
  OR?: Prisma.wardrobe_itemWhereInput[]
  NOT?: Prisma.wardrobe_itemWhereInput | Prisma.wardrobe_itemWhereInput[]
  id?: Prisma.StringFilter<"wardrobe_item"> | string
  name?: Prisma.StringFilter<"wardrobe_item"> | string
  description?: Prisma.StringFilter<"wardrobe_item"> | string
  imageUrl?: Prisma.StringFilter<"wardrobe_item"> | string
  userId?: Prisma.StringFilter<"wardrobe_item"> | string
  createdAt?: Prisma.DateTimeFilter<"wardrobe_item"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"wardrobe_item"> | Date | string
  color?: Prisma.StringFilter<"wardrobe_item"> | string
  wardrobeCategory?: Prisma.EnumWardrobeCategoryFilter<"wardrobe_item"> | $Enums.WardrobeCategory
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
}

export type wardrobe_itemOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  imageUrl?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  color?: Prisma.SortOrder
  wardrobeCategory?: Prisma.SortOrder
  user?: Prisma.UserOrderByWithRelationInput
}

export type wardrobe_itemWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.wardrobe_itemWhereInput | Prisma.wardrobe_itemWhereInput[]
  OR?: Prisma.wardrobe_itemWhereInput[]
  NOT?: Prisma.wardrobe_itemWhereInput | Prisma.wardrobe_itemWhereInput[]
  name?: Prisma.StringFilter<"wardrobe_item"> | string
  description?: Prisma.StringFilter<"wardrobe_item"> | string
  imageUrl?: Prisma.StringFilter<"wardrobe_item"> | string
  userId?: Prisma.StringFilter<"wardrobe_item"> | string
  createdAt?: Prisma.DateTimeFilter<"wardrobe_item"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"wardrobe_item"> | Date | string
  color?: Prisma.StringFilter<"wardrobe_item"> | string
  wardrobeCategory?: Prisma.EnumWardrobeCategoryFilter<"wardrobe_item"> | $Enums.WardrobeCategory
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
}, "id">

export type wardrobe_itemOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  imageUrl?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  color?: Prisma.SortOrder
  wardrobeCategory?: Prisma.SortOrder
  _count?: Prisma.wardrobe_itemCountOrderByAggregateInput
  _max?: Prisma.wardrobe_itemMaxOrderByAggregateInput
  _min?: Prisma.wardrobe_itemMinOrderByAggregateInput
}

export type wardrobe_itemScalarWhereWithAggregatesInput = {
  AND?: Prisma.wardrobe_itemScalarWhereWithAggregatesInput | Prisma.wardrobe_itemScalarWhereWithAggregatesInput[]
  OR?: Prisma.wardrobe_itemScalarWhereWithAggregatesInput[]
  NOT?: Prisma.wardrobe_itemScalarWhereWithAggregatesInput | Prisma.wardrobe_itemScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"wardrobe_item"> | string
  name?: Prisma.StringWithAggregatesFilter<"wardrobe_item"> | string
  description?: Prisma.StringWithAggregatesFilter<"wardrobe_item"> | string
  imageUrl?: Prisma.StringWithAggregatesFilter<"wardrobe_item"> | string
  userId?: Prisma.StringWithAggregatesFilter<"wardrobe_item"> | string
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"wardrobe_item"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"wardrobe_item"> | Date | string
  color?: Prisma.StringWithAggregatesFilter<"wardrobe_item"> | string
  wardrobeCategory?: Prisma.EnumWardrobeCategoryWithAggregatesFilter<"wardrobe_item"> | $Enums.WardrobeCategory
}

export type wardrobe_itemCreateInput = {
  id?: string
  name: string
  description: string
  imageUrl: string
  createdAt?: Date | string
  updatedAt?: Date | string
  color: string
  wardrobeCategory: $Enums.WardrobeCategory
  user: Prisma.UserCreateNestedOneWithoutWardrobe_itemsInput
}

export type wardrobe_itemUncheckedCreateInput = {
  id?: string
  name: string
  description: string
  imageUrl: string
  userId: string
  createdAt?: Date | string
  updatedAt?: Date | string
  color: string
  wardrobeCategory: $Enums.WardrobeCategory
}

export type wardrobe_itemUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  imageUrl?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  color?: Prisma.StringFieldUpdateOperationsInput | string
  wardrobeCategory?: Prisma.EnumWardrobeCategoryFieldUpdateOperationsInput | $Enums.WardrobeCategory
  user?: Prisma.UserUpdateOneRequiredWithoutWardrobe_itemsNestedInput
}

export type wardrobe_itemUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  imageUrl?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  color?: Prisma.StringFieldUpdateOperationsInput | string
  wardrobeCategory?: Prisma.EnumWardrobeCategoryFieldUpdateOperationsInput | $Enums.WardrobeCategory
}

export type wardrobe_itemCreateManyInput = {
  id?: string
  name: string
  description: string
  imageUrl: string
  userId: string
  createdAt?: Date | string
  updatedAt?: Date | string
  color: string
  wardrobeCategory: $Enums.WardrobeCategory
}

export type wardrobe_itemUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  imageUrl?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  color?: Prisma.StringFieldUpdateOperationsInput | string
  wardrobeCategory?: Prisma.EnumWardrobeCategoryFieldUpdateOperationsInput | $Enums.WardrobeCategory
}

export type wardrobe_itemUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  imageUrl?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  color?: Prisma.StringFieldUpdateOperationsInput | string
  wardrobeCategory?: Prisma.EnumWardrobeCategoryFieldUpdateOperationsInput | $Enums.WardrobeCategory
}

export type Wardrobe_itemListRelationFilter = {
  every?: Prisma.wardrobe_itemWhereInput
  some?: Prisma.wardrobe_itemWhereInput
  none?: Prisma.wardrobe_itemWhereInput
}

export type wardrobe_itemOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type wardrobe_itemCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  imageUrl?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  color?: Prisma.SortOrder
  wardrobeCategory?: Prisma.SortOrder
}

export type wardrobe_itemMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  imageUrl?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  color?: Prisma.SortOrder
  wardrobeCategory?: Prisma.SortOrder
}

export type wardrobe_itemMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  imageUrl?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  color?: Prisma.SortOrder
  wardrobeCategory?: Prisma.SortOrder
}

export type wardrobe_itemCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.wardrobe_itemCreateWithoutUserInput, Prisma.wardrobe_itemUncheckedCreateWithoutUserInput> | Prisma.wardrobe_itemCreateWithoutUserInput[] | Prisma.wardrobe_itemUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.wardrobe_itemCreateOrConnectWithoutUserInput | Prisma.wardrobe_itemCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.wardrobe_itemCreateManyUserInputEnvelope
  connect?: Prisma.wardrobe_itemWhereUniqueInput | Prisma.wardrobe_itemWhereUniqueInput[]
}

export type wardrobe_itemUncheckedCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.wardrobe_itemCreateWithoutUserInput, Prisma.wardrobe_itemUncheckedCreateWithoutUserInput> | Prisma.wardrobe_itemCreateWithoutUserInput[] | Prisma.wardrobe_itemUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.wardrobe_itemCreateOrConnectWithoutUserInput | Prisma.wardrobe_itemCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.wardrobe_itemCreateManyUserInputEnvelope
  connect?: Prisma.wardrobe_itemWhereUniqueInput | Prisma.wardrobe_itemWhereUniqueInput[]
}

export type wardrobe_itemUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.wardrobe_itemCreateWithoutUserInput, Prisma.wardrobe_itemUncheckedCreateWithoutUserInput> | Prisma.wardrobe_itemCreateWithoutUserInput[] | Prisma.wardrobe_itemUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.wardrobe_itemCreateOrConnectWithoutUserInput | Prisma.wardrobe_itemCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.wardrobe_itemUpsertWithWhereUniqueWithoutUserInput | Prisma.wardrobe_itemUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.wardrobe_itemCreateManyUserInputEnvelope
  set?: Prisma.wardrobe_itemWhereUniqueInput | Prisma.wardrobe_itemWhereUniqueInput[]
  disconnect?: Prisma.wardrobe_itemWhereUniqueInput | Prisma.wardrobe_itemWhereUniqueInput[]
  delete?: Prisma.wardrobe_itemWhereUniqueInput | Prisma.wardrobe_itemWhereUniqueInput[]
  connect?: Prisma.wardrobe_itemWhereUniqueInput | Prisma.wardrobe_itemWhereUniqueInput[]
  update?: Prisma.wardrobe_itemUpdateWithWhereUniqueWithoutUserInput | Prisma.wardrobe_itemUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.wardrobe_itemUpdateManyWithWhereWithoutUserInput | Prisma.wardrobe_itemUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.wardrobe_itemScalarWhereInput | Prisma.wardrobe_itemScalarWhereInput[]
}

export type wardrobe_itemUncheckedUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.wardrobe_itemCreateWithoutUserInput, Prisma.wardrobe_itemUncheckedCreateWithoutUserInput> | Prisma.wardrobe_itemCreateWithoutUserInput[] | Prisma.wardrobe_itemUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.wardrobe_itemCreateOrConnectWithoutUserInput | Prisma.wardrobe_itemCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.wardrobe_itemUpsertWithWhereUniqueWithoutUserInput | Prisma.wardrobe_itemUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.wardrobe_itemCreateManyUserInputEnvelope
  set?: Prisma.wardrobe_itemWhereUniqueInput | Prisma.wardrobe_itemWhereUniqueInput[]
  disconnect?: Prisma.wardrobe_itemWhereUniqueInput | Prisma.wardrobe_itemWhereUniqueInput[]
  delete?: Prisma.wardrobe_itemWhereUniqueInput | Prisma.wardrobe_itemWhereUniqueInput[]
  connect?: Prisma.wardrobe_itemWhereUniqueInput | Prisma.wardrobe_itemWhereUniqueInput[]
  update?: Prisma.wardrobe_itemUpdateWithWhereUniqueWithoutUserInput | Prisma.wardrobe_itemUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.wardrobe_itemUpdateManyWithWhereWithoutUserInput | Prisma.wardrobe_itemUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.wardrobe_itemScalarWhereInput | Prisma.wardrobe_itemScalarWhereInput[]
}

export type EnumWardrobeCategoryFieldUpdateOperationsInput = {
  set?: $Enums.WardrobeCategory
}

export type wardrobe_itemCreateWithoutUserInput = {
  id?: string
  name: string
  description: string
  imageUrl: string
  createdAt?: Date | string
  updatedAt?: Date | string
  color: string
  wardrobeCategory: $Enums.WardrobeCategory
}

export type wardrobe_itemUncheckedCreateWithoutUserInput = {
  id?: string
  name: string
  description: string
  imageUrl: string
  createdAt?: Date | string
  updatedAt?: Date | string
  color: string
  wardrobeCategory: $Enums.WardrobeCategory
}

export type wardrobe_itemCreateOrConnectWithoutUserInput = {
  where: Prisma.wardrobe_itemWhereUniqueInput
  create: Prisma.XOR<Prisma.wardrobe_itemCreateWithoutUserInput, Prisma.wardrobe_itemUncheckedCreateWithoutUserInput>
}

export type wardrobe_itemCreateManyUserInputEnvelope = {
  data: Prisma.wardrobe_itemCreateManyUserInput | Prisma.wardrobe_itemCreateManyUserInput[]
  skipDuplicates?: boolean
}

export type wardrobe_itemUpsertWithWhereUniqueWithoutUserInput = {
  where: Prisma.wardrobe_itemWhereUniqueInput
  update: Prisma.XOR<Prisma.wardrobe_itemUpdateWithoutUserInput, Prisma.wardrobe_itemUncheckedUpdateWithoutUserInput>
  create: Prisma.XOR<Prisma.wardrobe_itemCreateWithoutUserInput, Prisma.wardrobe_itemUncheckedCreateWithoutUserInput>
}

export type wardrobe_itemUpdateWithWhereUniqueWithoutUserInput = {
  where: Prisma.wardrobe_itemWhereUniqueInput
  data: Prisma.XOR<Prisma.wardrobe_itemUpdateWithoutUserInput, Prisma.wardrobe_itemUncheckedUpdateWithoutUserInput>
}

export type wardrobe_itemUpdateManyWithWhereWithoutUserInput = {
  where: Prisma.wardrobe_itemScalarWhereInput
  data: Prisma.XOR<Prisma.wardrobe_itemUpdateManyMutationInput, Prisma.wardrobe_itemUncheckedUpdateManyWithoutUserInput>
}

export type wardrobe_itemScalarWhereInput = {
  AND?: Prisma.wardrobe_itemScalarWhereInput | Prisma.wardrobe_itemScalarWhereInput[]
  OR?: Prisma.wardrobe_itemScalarWhereInput[]
  NOT?: Prisma.wardrobe_itemScalarWhereInput | Prisma.wardrobe_itemScalarWhereInput[]
  id?: Prisma.StringFilter<"wardrobe_item"> | string
  name?: Prisma.StringFilter<"wardrobe_item"> | string
  description?: Prisma.StringFilter<"wardrobe_item"> | string
  imageUrl?: Prisma.StringFilter<"wardrobe_item"> | string
  userId?: Prisma.StringFilter<"wardrobe_item"> | string
  createdAt?: Prisma.DateTimeFilter<"wardrobe_item"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"wardrobe_item"> | Date | string
  color?: Prisma.StringFilter<"wardrobe_item"> | string
  wardrobeCategory?: Prisma.EnumWardrobeCategoryFilter<"wardrobe_item"> | $Enums.WardrobeCategory
}

export type wardrobe_itemCreateManyUserInput = {
  id?: string
  name: string
  description: string
  imageUrl: string
  createdAt?: Date | string
  updatedAt?: Date | string
  color: string
  wardrobeCategory: $Enums.WardrobeCategory
}

export type wardrobe_itemUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  imageUrl?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  color?: Prisma.StringFieldUpdateOperationsInput | string
  wardrobeCategory?: Prisma.EnumWardrobeCategoryFieldUpdateOperationsInput | $Enums.WardrobeCategory
}

export type wardrobe_itemUncheckedUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  imageUrl?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  color?: Prisma.StringFieldUpdateOperationsInput | string
  wardrobeCategory?: Prisma.EnumWardrobeCategoryFieldUpdateOperationsInput | $Enums.WardrobeCategory
}

export type wardrobe_itemUncheckedUpdateManyWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.StringFieldUpdateOperationsInput | string
  imageUrl?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  color?: Prisma.StringFieldUpdateOperationsInput | string
  wardrobeCategory?: Prisma.EnumWardrobeCategoryFieldUpdateOperationsInput | $Enums.WardrobeCategory
}



export type wardrobe_itemSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  description?: boolean
  imageUrl?: boolean
  userId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  color?: boolean
  wardrobeCategory?: boolean
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["wardrobe_item"]>

export type wardrobe_itemSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  description?: boolean
  imageUrl?: boolean
  userId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  color?: boolean
  wardrobeCategory?: boolean
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["wardrobe_item"]>

export type wardrobe_itemSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  description?: boolean
  imageUrl?: boolean
  userId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  color?: boolean
  wardrobeCategory?: boolean
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["wardrobe_item"]>

export type wardrobe_itemSelectScalar = {
  id?: boolean
  name?: boolean
  description?: boolean
  imageUrl?: boolean
  userId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  color?: boolean
  wardrobeCategory?: boolean
}

export type wardrobe_itemOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "name" | "description" | "imageUrl" | "userId" | "createdAt" | "updatedAt" | "color" | "wardrobeCategory", ExtArgs["result"]["wardrobe_item"]>
export type wardrobe_itemInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}
export type wardrobe_itemIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}
export type wardrobe_itemIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}

export type $wardrobe_itemPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "wardrobe_item"
  objects: {
    user: Prisma.$UserPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    name: string
    description: string
    imageUrl: string
    userId: string
    createdAt: Date
    updatedAt: Date
    color: string
    wardrobeCategory: $Enums.WardrobeCategory
  }, ExtArgs["result"]["wardrobe_item"]>
  composites: {}
}

export type wardrobe_itemGetPayload<S extends boolean | null | undefined | wardrobe_itemDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$wardrobe_itemPayload, S>

export type wardrobe_itemCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<wardrobe_itemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: Wardrobe_itemCountAggregateInputType | true
  }

export interface wardrobe_itemDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wardrobe_item'], meta: { name: 'wardrobe_item' } }
  /**
   * Find zero or one Wardrobe_item that matches the filter.
   * @param {wardrobe_itemFindUniqueArgs} args - Arguments to find a Wardrobe_item
   * @example
   * // Get one Wardrobe_item
   * const wardrobe_item = await prisma.wardrobe_item.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends wardrobe_itemFindUniqueArgs>(args: Prisma.SelectSubset<T, wardrobe_itemFindUniqueArgs<ExtArgs>>): Prisma.Prisma__wardrobe_itemClient<runtime.Types.Result.GetResult<Prisma.$wardrobe_itemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Wardrobe_item that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {wardrobe_itemFindUniqueOrThrowArgs} args - Arguments to find a Wardrobe_item
   * @example
   * // Get one Wardrobe_item
   * const wardrobe_item = await prisma.wardrobe_item.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends wardrobe_itemFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, wardrobe_itemFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__wardrobe_itemClient<runtime.Types.Result.GetResult<Prisma.$wardrobe_itemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Wardrobe_item that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {wardrobe_itemFindFirstArgs} args - Arguments to find a Wardrobe_item
   * @example
   * // Get one Wardrobe_item
   * const wardrobe_item = await prisma.wardrobe_item.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends wardrobe_itemFindFirstArgs>(args?: Prisma.SelectSubset<T, wardrobe_itemFindFirstArgs<ExtArgs>>): Prisma.Prisma__wardrobe_itemClient<runtime.Types.Result.GetResult<Prisma.$wardrobe_itemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Wardrobe_item that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {wardrobe_itemFindFirstOrThrowArgs} args - Arguments to find a Wardrobe_item
   * @example
   * // Get one Wardrobe_item
   * const wardrobe_item = await prisma.wardrobe_item.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends wardrobe_itemFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, wardrobe_itemFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__wardrobe_itemClient<runtime.Types.Result.GetResult<Prisma.$wardrobe_itemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Wardrobe_items that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {wardrobe_itemFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Wardrobe_items
   * const wardrobe_items = await prisma.wardrobe_item.findMany()
   * 
   * // Get first 10 Wardrobe_items
   * const wardrobe_items = await prisma.wardrobe_item.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const wardrobe_itemWithIdOnly = await prisma.wardrobe_item.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends wardrobe_itemFindManyArgs>(args?: Prisma.SelectSubset<T, wardrobe_itemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$wardrobe_itemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Wardrobe_item.
   * @param {wardrobe_itemCreateArgs} args - Arguments to create a Wardrobe_item.
   * @example
   * // Create one Wardrobe_item
   * const Wardrobe_item = await prisma.wardrobe_item.create({
   *   data: {
   *     // ... data to create a Wardrobe_item
   *   }
   * })
   * 
   */
  create<T extends wardrobe_itemCreateArgs>(args: Prisma.SelectSubset<T, wardrobe_itemCreateArgs<ExtArgs>>): Prisma.Prisma__wardrobe_itemClient<runtime.Types.Result.GetResult<Prisma.$wardrobe_itemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Wardrobe_items.
   * @param {wardrobe_itemCreateManyArgs} args - Arguments to create many Wardrobe_items.
   * @example
   * // Create many Wardrobe_items
   * const wardrobe_item = await prisma.wardrobe_item.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends wardrobe_itemCreateManyArgs>(args?: Prisma.SelectSubset<T, wardrobe_itemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Wardrobe_items and returns the data saved in the database.
   * @param {wardrobe_itemCreateManyAndReturnArgs} args - Arguments to create many Wardrobe_items.
   * @example
   * // Create many Wardrobe_items
   * const wardrobe_item = await prisma.wardrobe_item.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Wardrobe_items and only return the `id`
   * const wardrobe_itemWithIdOnly = await prisma.wardrobe_item.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends wardrobe_itemCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, wardrobe_itemCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$wardrobe_itemPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Wardrobe_item.
   * @param {wardrobe_itemDeleteArgs} args - Arguments to delete one Wardrobe_item.
   * @example
   * // Delete one Wardrobe_item
   * const Wardrobe_item = await prisma.wardrobe_item.delete({
   *   where: {
   *     // ... filter to delete one Wardrobe_item
   *   }
   * })
   * 
   */
  delete<T extends wardrobe_itemDeleteArgs>(args: Prisma.SelectSubset<T, wardrobe_itemDeleteArgs<ExtArgs>>): Prisma.Prisma__wardrobe_itemClient<runtime.Types.Result.GetResult<Prisma.$wardrobe_itemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Wardrobe_item.
   * @param {wardrobe_itemUpdateArgs} args - Arguments to update one Wardrobe_item.
   * @example
   * // Update one Wardrobe_item
   * const wardrobe_item = await prisma.wardrobe_item.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends wardrobe_itemUpdateArgs>(args: Prisma.SelectSubset<T, wardrobe_itemUpdateArgs<ExtArgs>>): Prisma.Prisma__wardrobe_itemClient<runtime.Types.Result.GetResult<Prisma.$wardrobe_itemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Wardrobe_items.
   * @param {wardrobe_itemDeleteManyArgs} args - Arguments to filter Wardrobe_items to delete.
   * @example
   * // Delete a few Wardrobe_items
   * const { count } = await prisma.wardrobe_item.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends wardrobe_itemDeleteManyArgs>(args?: Prisma.SelectSubset<T, wardrobe_itemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Wardrobe_items.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {wardrobe_itemUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Wardrobe_items
   * const wardrobe_item = await prisma.wardrobe_item.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends wardrobe_itemUpdateManyArgs>(args: Prisma.SelectSubset<T, wardrobe_itemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Wardrobe_items and returns the data updated in the database.
   * @param {wardrobe_itemUpdateManyAndReturnArgs} args - Arguments to update many Wardrobe_items.
   * @example
   * // Update many Wardrobe_items
   * const wardrobe_item = await prisma.wardrobe_item.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Wardrobe_items and only return the `id`
   * const wardrobe_itemWithIdOnly = await prisma.wardrobe_item.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends wardrobe_itemUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, wardrobe_itemUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$wardrobe_itemPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Wardrobe_item.
   * @param {wardrobe_itemUpsertArgs} args - Arguments to update or create a Wardrobe_item.
   * @example
   * // Update or create a Wardrobe_item
   * const wardrobe_item = await prisma.wardrobe_item.upsert({
   *   create: {
   *     // ... data to create a Wardrobe_item
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Wardrobe_item we want to update
   *   }
   * })
   */
  upsert<T extends wardrobe_itemUpsertArgs>(args: Prisma.SelectSubset<T, wardrobe_itemUpsertArgs<ExtArgs>>): Prisma.Prisma__wardrobe_itemClient<runtime.Types.Result.GetResult<Prisma.$wardrobe_itemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Wardrobe_items.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {wardrobe_itemCountArgs} args - Arguments to filter Wardrobe_items to count.
   * @example
   * // Count the number of Wardrobe_items
   * const count = await prisma.wardrobe_item.count({
   *   where: {
   *     // ... the filter for the Wardrobe_items we want to count
   *   }
   * })
  **/
  count<T extends wardrobe_itemCountArgs>(
    args?: Prisma.Subset<T, wardrobe_itemCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], Wardrobe_itemCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Wardrobe_item.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {Wardrobe_itemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends Wardrobe_itemAggregateArgs>(args: Prisma.Subset<T, Wardrobe_itemAggregateArgs>): Prisma.PrismaPromise<GetWardrobe_itemAggregateType<T>>

  /**
   * Group by Wardrobe_item.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {wardrobe_itemGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends wardrobe_itemGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: wardrobe_itemGroupByArgs['orderBy'] }
      : { orderBy?: wardrobe_itemGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, wardrobe_itemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWardrobe_itemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the wardrobe_item model
 */
readonly fields: wardrobe_itemFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for wardrobe_item.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__wardrobe_itemClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  user<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the wardrobe_item model
 */
export interface wardrobe_itemFieldRefs {
  readonly id: Prisma.FieldRef<"wardrobe_item", 'String'>
  readonly name: Prisma.FieldRef<"wardrobe_item", 'String'>
  readonly description: Prisma.FieldRef<"wardrobe_item", 'String'>
  readonly imageUrl: Prisma.FieldRef<"wardrobe_item", 'String'>
  readonly userId: Prisma.FieldRef<"wardrobe_item", 'String'>
  readonly createdAt: Prisma.FieldRef<"wardrobe_item", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"wardrobe_item", 'DateTime'>
  readonly color: Prisma.FieldRef<"wardrobe_item", 'String'>
  readonly wardrobeCategory: Prisma.FieldRef<"wardrobe_item", 'WardrobeCategory'>
}
    

// Custom InputTypes
/**
 * wardrobe_item findUnique
 */
export type wardrobe_itemFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wardrobe_item
   */
  select?: Prisma.wardrobe_itemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the wardrobe_item
   */
  omit?: Prisma.wardrobe_itemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.wardrobe_itemInclude<ExtArgs> | null
  /**
   * Filter, which wardrobe_item to fetch.
   */
  where: Prisma.wardrobe_itemWhereUniqueInput
}

/**
 * wardrobe_item findUniqueOrThrow
 */
export type wardrobe_itemFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wardrobe_item
   */
  select?: Prisma.wardrobe_itemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the wardrobe_item
   */
  omit?: Prisma.wardrobe_itemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.wardrobe_itemInclude<ExtArgs> | null
  /**
   * Filter, which wardrobe_item to fetch.
   */
  where: Prisma.wardrobe_itemWhereUniqueInput
}

/**
 * wardrobe_item findFirst
 */
export type wardrobe_itemFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wardrobe_item
   */
  select?: Prisma.wardrobe_itemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the wardrobe_item
   */
  omit?: Prisma.wardrobe_itemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.wardrobe_itemInclude<ExtArgs> | null
  /**
   * Filter, which wardrobe_item to fetch.
   */
  where?: Prisma.wardrobe_itemWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of wardrobe_items to fetch.
   */
  orderBy?: Prisma.wardrobe_itemOrderByWithRelationInput | Prisma.wardrobe_itemOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for wardrobe_items.
   */
  cursor?: Prisma.wardrobe_itemWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` wardrobe_items from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` wardrobe_items.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of wardrobe_items.
   */
  distinct?: Prisma.Wardrobe_itemScalarFieldEnum | Prisma.Wardrobe_itemScalarFieldEnum[]
}

/**
 * wardrobe_item findFirstOrThrow
 */
export type wardrobe_itemFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wardrobe_item
   */
  select?: Prisma.wardrobe_itemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the wardrobe_item
   */
  omit?: Prisma.wardrobe_itemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.wardrobe_itemInclude<ExtArgs> | null
  /**
   * Filter, which wardrobe_item to fetch.
   */
  where?: Prisma.wardrobe_itemWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of wardrobe_items to fetch.
   */
  orderBy?: Prisma.wardrobe_itemOrderByWithRelationInput | Prisma.wardrobe_itemOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for wardrobe_items.
   */
  cursor?: Prisma.wardrobe_itemWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` wardrobe_items from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` wardrobe_items.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of wardrobe_items.
   */
  distinct?: Prisma.Wardrobe_itemScalarFieldEnum | Prisma.Wardrobe_itemScalarFieldEnum[]
}

/**
 * wardrobe_item findMany
 */
export type wardrobe_itemFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wardrobe_item
   */
  select?: Prisma.wardrobe_itemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the wardrobe_item
   */
  omit?: Prisma.wardrobe_itemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.wardrobe_itemInclude<ExtArgs> | null
  /**
   * Filter, which wardrobe_items to fetch.
   */
  where?: Prisma.wardrobe_itemWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of wardrobe_items to fetch.
   */
  orderBy?: Prisma.wardrobe_itemOrderByWithRelationInput | Prisma.wardrobe_itemOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing wardrobe_items.
   */
  cursor?: Prisma.wardrobe_itemWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` wardrobe_items from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` wardrobe_items.
   */
  skip?: number
  distinct?: Prisma.Wardrobe_itemScalarFieldEnum | Prisma.Wardrobe_itemScalarFieldEnum[]
}

/**
 * wardrobe_item create
 */
export type wardrobe_itemCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wardrobe_item
   */
  select?: Prisma.wardrobe_itemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the wardrobe_item
   */
  omit?: Prisma.wardrobe_itemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.wardrobe_itemInclude<ExtArgs> | null
  /**
   * The data needed to create a wardrobe_item.
   */
  data: Prisma.XOR<Prisma.wardrobe_itemCreateInput, Prisma.wardrobe_itemUncheckedCreateInput>
}

/**
 * wardrobe_item createMany
 */
export type wardrobe_itemCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many wardrobe_items.
   */
  data: Prisma.wardrobe_itemCreateManyInput | Prisma.wardrobe_itemCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * wardrobe_item createManyAndReturn
 */
export type wardrobe_itemCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wardrobe_item
   */
  select?: Prisma.wardrobe_itemSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the wardrobe_item
   */
  omit?: Prisma.wardrobe_itemOmit<ExtArgs> | null
  /**
   * The data used to create many wardrobe_items.
   */
  data: Prisma.wardrobe_itemCreateManyInput | Prisma.wardrobe_itemCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.wardrobe_itemIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * wardrobe_item update
 */
export type wardrobe_itemUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wardrobe_item
   */
  select?: Prisma.wardrobe_itemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the wardrobe_item
   */
  omit?: Prisma.wardrobe_itemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.wardrobe_itemInclude<ExtArgs> | null
  /**
   * The data needed to update a wardrobe_item.
   */
  data: Prisma.XOR<Prisma.wardrobe_itemUpdateInput, Prisma.wardrobe_itemUncheckedUpdateInput>
  /**
   * Choose, which wardrobe_item to update.
   */
  where: Prisma.wardrobe_itemWhereUniqueInput
}

/**
 * wardrobe_item updateMany
 */
export type wardrobe_itemUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update wardrobe_items.
   */
  data: Prisma.XOR<Prisma.wardrobe_itemUpdateManyMutationInput, Prisma.wardrobe_itemUncheckedUpdateManyInput>
  /**
   * Filter which wardrobe_items to update
   */
  where?: Prisma.wardrobe_itemWhereInput
  /**
   * Limit how many wardrobe_items to update.
   */
  limit?: number
}

/**
 * wardrobe_item updateManyAndReturn
 */
export type wardrobe_itemUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wardrobe_item
   */
  select?: Prisma.wardrobe_itemSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the wardrobe_item
   */
  omit?: Prisma.wardrobe_itemOmit<ExtArgs> | null
  /**
   * The data used to update wardrobe_items.
   */
  data: Prisma.XOR<Prisma.wardrobe_itemUpdateManyMutationInput, Prisma.wardrobe_itemUncheckedUpdateManyInput>
  /**
   * Filter which wardrobe_items to update
   */
  where?: Prisma.wardrobe_itemWhereInput
  /**
   * Limit how many wardrobe_items to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.wardrobe_itemIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * wardrobe_item upsert
 */
export type wardrobe_itemUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wardrobe_item
   */
  select?: Prisma.wardrobe_itemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the wardrobe_item
   */
  omit?: Prisma.wardrobe_itemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.wardrobe_itemInclude<ExtArgs> | null
  /**
   * The filter to search for the wardrobe_item to update in case it exists.
   */
  where: Prisma.wardrobe_itemWhereUniqueInput
  /**
   * In case the wardrobe_item found by the `where` argument doesn't exist, create a new wardrobe_item with this data.
   */
  create: Prisma.XOR<Prisma.wardrobe_itemCreateInput, Prisma.wardrobe_itemUncheckedCreateInput>
  /**
   * In case the wardrobe_item was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.wardrobe_itemUpdateInput, Prisma.wardrobe_itemUncheckedUpdateInput>
}

/**
 * wardrobe_item delete
 */
export type wardrobe_itemDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wardrobe_item
   */
  select?: Prisma.wardrobe_itemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the wardrobe_item
   */
  omit?: Prisma.wardrobe_itemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.wardrobe_itemInclude<ExtArgs> | null
  /**
   * Filter which wardrobe_item to delete.
   */
  where: Prisma.wardrobe_itemWhereUniqueInput
}

/**
 * wardrobe_item deleteMany
 */
export type wardrobe_itemDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which wardrobe_items to delete
   */
  where?: Prisma.wardrobe_itemWhereInput
  /**
   * Limit how many wardrobe_items to delete.
   */
  limit?: number
}

/**
 * wardrobe_item without action
 */
export type wardrobe_itemDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the wardrobe_item
   */
  select?: Prisma.wardrobe_itemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the wardrobe_item
   */
  omit?: Prisma.wardrobe_itemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.wardrobe_itemInclude<ExtArgs> | null
}
