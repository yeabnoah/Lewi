
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `style_request` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model style_request
 * 
 */
export type style_requestModel = runtime.Types.Result.DefaultSelection<Prisma.$style_requestPayload>

export type AggregateStyle_request = {
  _count: Style_requestCountAggregateOutputType | null
  _min: Style_requestMinAggregateOutputType | null
  _max: Style_requestMaxAggregateOutputType | null
}

export type Style_requestMinAggregateOutputType = {
  id: string | null
  requestDescription: string | null
  style_request_type: string | null
  userId: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type Style_requestMaxAggregateOutputType = {
  id: string | null
  requestDescription: string | null
  style_request_type: string | null
  userId: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type Style_requestCountAggregateOutputType = {
  id: number
  requestDescription: number
  style_request_type: number
  userId: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type Style_requestMinAggregateInputType = {
  id?: true
  requestDescription?: true
  style_request_type?: true
  userId?: true
  createdAt?: true
  updatedAt?: true
}

export type Style_requestMaxAggregateInputType = {
  id?: true
  requestDescription?: true
  style_request_type?: true
  userId?: true
  createdAt?: true
  updatedAt?: true
}

export type Style_requestCountAggregateInputType = {
  id?: true
  requestDescription?: true
  style_request_type?: true
  userId?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type Style_requestAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which style_request to aggregate.
   */
  where?: Prisma.style_requestWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of style_requests to fetch.
   */
  orderBy?: Prisma.style_requestOrderByWithRelationInput | Prisma.style_requestOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.style_requestWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` style_requests from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` style_requests.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned style_requests
  **/
  _count?: true | Style_requestCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: Style_requestMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: Style_requestMaxAggregateInputType
}

export type GetStyle_requestAggregateType<T extends Style_requestAggregateArgs> = {
      [P in keyof T & keyof AggregateStyle_request]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateStyle_request[P]>
    : Prisma.GetScalarType<T[P], AggregateStyle_request[P]>
}




export type style_requestGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.style_requestWhereInput
  orderBy?: Prisma.style_requestOrderByWithAggregationInput | Prisma.style_requestOrderByWithAggregationInput[]
  by: Prisma.Style_requestScalarFieldEnum[] | Prisma.Style_requestScalarFieldEnum
  having?: Prisma.style_requestScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: Style_requestCountAggregateInputType | true
  _min?: Style_requestMinAggregateInputType
  _max?: Style_requestMaxAggregateInputType
}

export type Style_requestGroupByOutputType = {
  id: string
  requestDescription: string
  style_request_type: string
  userId: string
  createdAt: Date
  updatedAt: Date
  _count: Style_requestCountAggregateOutputType | null
  _min: Style_requestMinAggregateOutputType | null
  _max: Style_requestMaxAggregateOutputType | null
}

type GetStyle_requestGroupByPayload<T extends style_requestGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<Style_requestGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof Style_requestGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], Style_requestGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], Style_requestGroupByOutputType[P]>
      }
    >
  >



export type style_requestWhereInput = {
  AND?: Prisma.style_requestWhereInput | Prisma.style_requestWhereInput[]
  OR?: Prisma.style_requestWhereInput[]
  NOT?: Prisma.style_requestWhereInput | Prisma.style_requestWhereInput[]
  id?: Prisma.StringFilter<"style_request"> | string
  requestDescription?: Prisma.StringFilter<"style_request"> | string
  style_request_type?: Prisma.StringFilter<"style_request"> | string
  userId?: Prisma.StringFilter<"style_request"> | string
  createdAt?: Prisma.DateTimeFilter<"style_request"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"style_request"> | Date | string
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
}

export type style_requestOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  requestDescription?: Prisma.SortOrder
  style_request_type?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  user?: Prisma.UserOrderByWithRelationInput
}

export type style_requestWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.style_requestWhereInput | Prisma.style_requestWhereInput[]
  OR?: Prisma.style_requestWhereInput[]
  NOT?: Prisma.style_requestWhereInput | Prisma.style_requestWhereInput[]
  requestDescription?: Prisma.StringFilter<"style_request"> | string
  style_request_type?: Prisma.StringFilter<"style_request"> | string
  userId?: Prisma.StringFilter<"style_request"> | string
  createdAt?: Prisma.DateTimeFilter<"style_request"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"style_request"> | Date | string
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
}, "id">

export type style_requestOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  requestDescription?: Prisma.SortOrder
  style_request_type?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.style_requestCountOrderByAggregateInput
  _max?: Prisma.style_requestMaxOrderByAggregateInput
  _min?: Prisma.style_requestMinOrderByAggregateInput
}

export type style_requestScalarWhereWithAggregatesInput = {
  AND?: Prisma.style_requestScalarWhereWithAggregatesInput | Prisma.style_requestScalarWhereWithAggregatesInput[]
  OR?: Prisma.style_requestScalarWhereWithAggregatesInput[]
  NOT?: Prisma.style_requestScalarWhereWithAggregatesInput | Prisma.style_requestScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"style_request"> | string
  requestDescription?: Prisma.StringWithAggregatesFilter<"style_request"> | string
  style_request_type?: Prisma.StringWithAggregatesFilter<"style_request"> | string
  userId?: Prisma.StringWithAggregatesFilter<"style_request"> | string
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"style_request"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"style_request"> | Date | string
}

export type style_requestCreateInput = {
  id?: string
  requestDescription: string
  style_request_type: string
  createdAt?: Date | string
  updatedAt?: Date | string
  user: Prisma.UserCreateNestedOneWithoutStyle_requestsInput
}

export type style_requestUncheckedCreateInput = {
  id?: string
  requestDescription: string
  style_request_type: string
  userId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type style_requestUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  requestDescription?: Prisma.StringFieldUpdateOperationsInput | string
  style_request_type?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  user?: Prisma.UserUpdateOneRequiredWithoutStyle_requestsNestedInput
}

export type style_requestUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  requestDescription?: Prisma.StringFieldUpdateOperationsInput | string
  style_request_type?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type style_requestCreateManyInput = {
  id?: string
  requestDescription: string
  style_request_type: string
  userId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type style_requestUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  requestDescription?: Prisma.StringFieldUpdateOperationsInput | string
  style_request_type?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type style_requestUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  requestDescription?: Prisma.StringFieldUpdateOperationsInput | string
  style_request_type?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type Style_requestListRelationFilter = {
  every?: Prisma.style_requestWhereInput
  some?: Prisma.style_requestWhereInput
  none?: Prisma.style_requestWhereInput
}

export type style_requestOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type style_requestCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  requestDescription?: Prisma.SortOrder
  style_request_type?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type style_requestMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  requestDescription?: Prisma.SortOrder
  style_request_type?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type style_requestMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  requestDescription?: Prisma.SortOrder
  style_request_type?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type style_requestCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.style_requestCreateWithoutUserInput, Prisma.style_requestUncheckedCreateWithoutUserInput> | Prisma.style_requestCreateWithoutUserInput[] | Prisma.style_requestUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.style_requestCreateOrConnectWithoutUserInput | Prisma.style_requestCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.style_requestCreateManyUserInputEnvelope
  connect?: Prisma.style_requestWhereUniqueInput | Prisma.style_requestWhereUniqueInput[]
}

export type style_requestUncheckedCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.style_requestCreateWithoutUserInput, Prisma.style_requestUncheckedCreateWithoutUserInput> | Prisma.style_requestCreateWithoutUserInput[] | Prisma.style_requestUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.style_requestCreateOrConnectWithoutUserInput | Prisma.style_requestCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.style_requestCreateManyUserInputEnvelope
  connect?: Prisma.style_requestWhereUniqueInput | Prisma.style_requestWhereUniqueInput[]
}

export type style_requestUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.style_requestCreateWithoutUserInput, Prisma.style_requestUncheckedCreateWithoutUserInput> | Prisma.style_requestCreateWithoutUserInput[] | Prisma.style_requestUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.style_requestCreateOrConnectWithoutUserInput | Prisma.style_requestCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.style_requestUpsertWithWhereUniqueWithoutUserInput | Prisma.style_requestUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.style_requestCreateManyUserInputEnvelope
  set?: Prisma.style_requestWhereUniqueInput | Prisma.style_requestWhereUniqueInput[]
  disconnect?: Prisma.style_requestWhereUniqueInput | Prisma.style_requestWhereUniqueInput[]
  delete?: Prisma.style_requestWhereUniqueInput | Prisma.style_requestWhereUniqueInput[]
  connect?: Prisma.style_requestWhereUniqueInput | Prisma.style_requestWhereUniqueInput[]
  update?: Prisma.style_requestUpdateWithWhereUniqueWithoutUserInput | Prisma.style_requestUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.style_requestUpdateManyWithWhereWithoutUserInput | Prisma.style_requestUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.style_requestScalarWhereInput | Prisma.style_requestScalarWhereInput[]
}

export type style_requestUncheckedUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.style_requestCreateWithoutUserInput, Prisma.style_requestUncheckedCreateWithoutUserInput> | Prisma.style_requestCreateWithoutUserInput[] | Prisma.style_requestUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.style_requestCreateOrConnectWithoutUserInput | Prisma.style_requestCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.style_requestUpsertWithWhereUniqueWithoutUserInput | Prisma.style_requestUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.style_requestCreateManyUserInputEnvelope
  set?: Prisma.style_requestWhereUniqueInput | Prisma.style_requestWhereUniqueInput[]
  disconnect?: Prisma.style_requestWhereUniqueInput | Prisma.style_requestWhereUniqueInput[]
  delete?: Prisma.style_requestWhereUniqueInput | Prisma.style_requestWhereUniqueInput[]
  connect?: Prisma.style_requestWhereUniqueInput | Prisma.style_requestWhereUniqueInput[]
  update?: Prisma.style_requestUpdateWithWhereUniqueWithoutUserInput | Prisma.style_requestUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.style_requestUpdateManyWithWhereWithoutUserInput | Prisma.style_requestUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.style_requestScalarWhereInput | Prisma.style_requestScalarWhereInput[]
}

export type style_requestCreateWithoutUserInput = {
  id?: string
  requestDescription: string
  style_request_type: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type style_requestUncheckedCreateWithoutUserInput = {
  id?: string
  requestDescription: string
  style_request_type: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type style_requestCreateOrConnectWithoutUserInput = {
  where: Prisma.style_requestWhereUniqueInput
  create: Prisma.XOR<Prisma.style_requestCreateWithoutUserInput, Prisma.style_requestUncheckedCreateWithoutUserInput>
}

export type style_requestCreateManyUserInputEnvelope = {
  data: Prisma.style_requestCreateManyUserInput | Prisma.style_requestCreateManyUserInput[]
  skipDuplicates?: boolean
}

export type style_requestUpsertWithWhereUniqueWithoutUserInput = {
  where: Prisma.style_requestWhereUniqueInput
  update: Prisma.XOR<Prisma.style_requestUpdateWithoutUserInput, Prisma.style_requestUncheckedUpdateWithoutUserInput>
  create: Prisma.XOR<Prisma.style_requestCreateWithoutUserInput, Prisma.style_requestUncheckedCreateWithoutUserInput>
}

export type style_requestUpdateWithWhereUniqueWithoutUserInput = {
  where: Prisma.style_requestWhereUniqueInput
  data: Prisma.XOR<Prisma.style_requestUpdateWithoutUserInput, Prisma.style_requestUncheckedUpdateWithoutUserInput>
}

export type style_requestUpdateManyWithWhereWithoutUserInput = {
  where: Prisma.style_requestScalarWhereInput
  data: Prisma.XOR<Prisma.style_requestUpdateManyMutationInput, Prisma.style_requestUncheckedUpdateManyWithoutUserInput>
}

export type style_requestScalarWhereInput = {
  AND?: Prisma.style_requestScalarWhereInput | Prisma.style_requestScalarWhereInput[]
  OR?: Prisma.style_requestScalarWhereInput[]
  NOT?: Prisma.style_requestScalarWhereInput | Prisma.style_requestScalarWhereInput[]
  id?: Prisma.StringFilter<"style_request"> | string
  requestDescription?: Prisma.StringFilter<"style_request"> | string
  style_request_type?: Prisma.StringFilter<"style_request"> | string
  userId?: Prisma.StringFilter<"style_request"> | string
  createdAt?: Prisma.DateTimeFilter<"style_request"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"style_request"> | Date | string
}

export type style_requestCreateManyUserInput = {
  id?: string
  requestDescription: string
  style_request_type: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type style_requestUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  requestDescription?: Prisma.StringFieldUpdateOperationsInput | string
  style_request_type?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type style_requestUncheckedUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  requestDescription?: Prisma.StringFieldUpdateOperationsInput | string
  style_request_type?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type style_requestUncheckedUpdateManyWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  requestDescription?: Prisma.StringFieldUpdateOperationsInput | string
  style_request_type?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type style_requestSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  requestDescription?: boolean
  style_request_type?: boolean
  userId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["style_request"]>

export type style_requestSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  requestDescription?: boolean
  style_request_type?: boolean
  userId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["style_request"]>

export type style_requestSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  requestDescription?: boolean
  style_request_type?: boolean
  userId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["style_request"]>

export type style_requestSelectScalar = {
  id?: boolean
  requestDescription?: boolean
  style_request_type?: boolean
  userId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type style_requestOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "requestDescription" | "style_request_type" | "userId" | "createdAt" | "updatedAt", ExtArgs["result"]["style_request"]>
export type style_requestInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}
export type style_requestIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}
export type style_requestIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}

export type $style_requestPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "style_request"
  objects: {
    user: Prisma.$UserPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    requestDescription: string
    style_request_type: string
    userId: string
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["style_request"]>
  composites: {}
}

export type style_requestGetPayload<S extends boolean | null | undefined | style_requestDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$style_requestPayload, S>

export type style_requestCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<style_requestFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: Style_requestCountAggregateInputType | true
  }

export interface style_requestDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['style_request'], meta: { name: 'style_request' } }
  /**
   * Find zero or one Style_request that matches the filter.
   * @param {style_requestFindUniqueArgs} args - Arguments to find a Style_request
   * @example
   * // Get one Style_request
   * const style_request = await prisma.style_request.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends style_requestFindUniqueArgs>(args: Prisma.SelectSubset<T, style_requestFindUniqueArgs<ExtArgs>>): Prisma.Prisma__style_requestClient<runtime.Types.Result.GetResult<Prisma.$style_requestPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Style_request that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {style_requestFindUniqueOrThrowArgs} args - Arguments to find a Style_request
   * @example
   * // Get one Style_request
   * const style_request = await prisma.style_request.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends style_requestFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, style_requestFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__style_requestClient<runtime.Types.Result.GetResult<Prisma.$style_requestPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Style_request that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {style_requestFindFirstArgs} args - Arguments to find a Style_request
   * @example
   * // Get one Style_request
   * const style_request = await prisma.style_request.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends style_requestFindFirstArgs>(args?: Prisma.SelectSubset<T, style_requestFindFirstArgs<ExtArgs>>): Prisma.Prisma__style_requestClient<runtime.Types.Result.GetResult<Prisma.$style_requestPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Style_request that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {style_requestFindFirstOrThrowArgs} args - Arguments to find a Style_request
   * @example
   * // Get one Style_request
   * const style_request = await prisma.style_request.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends style_requestFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, style_requestFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__style_requestClient<runtime.Types.Result.GetResult<Prisma.$style_requestPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Style_requests that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {style_requestFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Style_requests
   * const style_requests = await prisma.style_request.findMany()
   * 
   * // Get first 10 Style_requests
   * const style_requests = await prisma.style_request.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const style_requestWithIdOnly = await prisma.style_request.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends style_requestFindManyArgs>(args?: Prisma.SelectSubset<T, style_requestFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$style_requestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Style_request.
   * @param {style_requestCreateArgs} args - Arguments to create a Style_request.
   * @example
   * // Create one Style_request
   * const Style_request = await prisma.style_request.create({
   *   data: {
   *     // ... data to create a Style_request
   *   }
   * })
   * 
   */
  create<T extends style_requestCreateArgs>(args: Prisma.SelectSubset<T, style_requestCreateArgs<ExtArgs>>): Prisma.Prisma__style_requestClient<runtime.Types.Result.GetResult<Prisma.$style_requestPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Style_requests.
   * @param {style_requestCreateManyArgs} args - Arguments to create many Style_requests.
   * @example
   * // Create many Style_requests
   * const style_request = await prisma.style_request.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends style_requestCreateManyArgs>(args?: Prisma.SelectSubset<T, style_requestCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Style_requests and returns the data saved in the database.
   * @param {style_requestCreateManyAndReturnArgs} args - Arguments to create many Style_requests.
   * @example
   * // Create many Style_requests
   * const style_request = await prisma.style_request.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Style_requests and only return the `id`
   * const style_requestWithIdOnly = await prisma.style_request.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends style_requestCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, style_requestCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$style_requestPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Style_request.
   * @param {style_requestDeleteArgs} args - Arguments to delete one Style_request.
   * @example
   * // Delete one Style_request
   * const Style_request = await prisma.style_request.delete({
   *   where: {
   *     // ... filter to delete one Style_request
   *   }
   * })
   * 
   */
  delete<T extends style_requestDeleteArgs>(args: Prisma.SelectSubset<T, style_requestDeleteArgs<ExtArgs>>): Prisma.Prisma__style_requestClient<runtime.Types.Result.GetResult<Prisma.$style_requestPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Style_request.
   * @param {style_requestUpdateArgs} args - Arguments to update one Style_request.
   * @example
   * // Update one Style_request
   * const style_request = await prisma.style_request.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends style_requestUpdateArgs>(args: Prisma.SelectSubset<T, style_requestUpdateArgs<ExtArgs>>): Prisma.Prisma__style_requestClient<runtime.Types.Result.GetResult<Prisma.$style_requestPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Style_requests.
   * @param {style_requestDeleteManyArgs} args - Arguments to filter Style_requests to delete.
   * @example
   * // Delete a few Style_requests
   * const { count } = await prisma.style_request.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends style_requestDeleteManyArgs>(args?: Prisma.SelectSubset<T, style_requestDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Style_requests.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {style_requestUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Style_requests
   * const style_request = await prisma.style_request.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends style_requestUpdateManyArgs>(args: Prisma.SelectSubset<T, style_requestUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Style_requests and returns the data updated in the database.
   * @param {style_requestUpdateManyAndReturnArgs} args - Arguments to update many Style_requests.
   * @example
   * // Update many Style_requests
   * const style_request = await prisma.style_request.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Style_requests and only return the `id`
   * const style_requestWithIdOnly = await prisma.style_request.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends style_requestUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, style_requestUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$style_requestPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Style_request.
   * @param {style_requestUpsertArgs} args - Arguments to update or create a Style_request.
   * @example
   * // Update or create a Style_request
   * const style_request = await prisma.style_request.upsert({
   *   create: {
   *     // ... data to create a Style_request
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Style_request we want to update
   *   }
   * })
   */
  upsert<T extends style_requestUpsertArgs>(args: Prisma.SelectSubset<T, style_requestUpsertArgs<ExtArgs>>): Prisma.Prisma__style_requestClient<runtime.Types.Result.GetResult<Prisma.$style_requestPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Style_requests.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {style_requestCountArgs} args - Arguments to filter Style_requests to count.
   * @example
   * // Count the number of Style_requests
   * const count = await prisma.style_request.count({
   *   where: {
   *     // ... the filter for the Style_requests we want to count
   *   }
   * })
  **/
  count<T extends style_requestCountArgs>(
    args?: Prisma.Subset<T, style_requestCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], Style_requestCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Style_request.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {Style_requestAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends Style_requestAggregateArgs>(args: Prisma.Subset<T, Style_requestAggregateArgs>): Prisma.PrismaPromise<GetStyle_requestAggregateType<T>>

  /**
   * Group by Style_request.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {style_requestGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends style_requestGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: style_requestGroupByArgs['orderBy'] }
      : { orderBy?: style_requestGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, style_requestGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStyle_requestGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the style_request model
 */
readonly fields: style_requestFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for style_request.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__style_requestClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  user<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the style_request model
 */
export interface style_requestFieldRefs {
  readonly id: Prisma.FieldRef<"style_request", 'String'>
  readonly requestDescription: Prisma.FieldRef<"style_request", 'String'>
  readonly style_request_type: Prisma.FieldRef<"style_request", 'String'>
  readonly userId: Prisma.FieldRef<"style_request", 'String'>
  readonly createdAt: Prisma.FieldRef<"style_request", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"style_request", 'DateTime'>
}
    

// Custom InputTypes
/**
 * style_request findUnique
 */
export type style_requestFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the style_request
   */
  select?: Prisma.style_requestSelect<ExtArgs> | null
  /**
   * Omit specific fields from the style_request
   */
  omit?: Prisma.style_requestOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.style_requestInclude<ExtArgs> | null
  /**
   * Filter, which style_request to fetch.
   */
  where: Prisma.style_requestWhereUniqueInput
}

/**
 * style_request findUniqueOrThrow
 */
export type style_requestFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the style_request
   */
  select?: Prisma.style_requestSelect<ExtArgs> | null
  /**
   * Omit specific fields from the style_request
   */
  omit?: Prisma.style_requestOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.style_requestInclude<ExtArgs> | null
  /**
   * Filter, which style_request to fetch.
   */
  where: Prisma.style_requestWhereUniqueInput
}

/**
 * style_request findFirst
 */
export type style_requestFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the style_request
   */
  select?: Prisma.style_requestSelect<ExtArgs> | null
  /**
   * Omit specific fields from the style_request
   */
  omit?: Prisma.style_requestOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.style_requestInclude<ExtArgs> | null
  /**
   * Filter, which style_request to fetch.
   */
  where?: Prisma.style_requestWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of style_requests to fetch.
   */
  orderBy?: Prisma.style_requestOrderByWithRelationInput | Prisma.style_requestOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for style_requests.
   */
  cursor?: Prisma.style_requestWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` style_requests from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` style_requests.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of style_requests.
   */
  distinct?: Prisma.Style_requestScalarFieldEnum | Prisma.Style_requestScalarFieldEnum[]
}

/**
 * style_request findFirstOrThrow
 */
export type style_requestFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the style_request
   */
  select?: Prisma.style_requestSelect<ExtArgs> | null
  /**
   * Omit specific fields from the style_request
   */
  omit?: Prisma.style_requestOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.style_requestInclude<ExtArgs> | null
  /**
   * Filter, which style_request to fetch.
   */
  where?: Prisma.style_requestWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of style_requests to fetch.
   */
  orderBy?: Prisma.style_requestOrderByWithRelationInput | Prisma.style_requestOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for style_requests.
   */
  cursor?: Prisma.style_requestWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` style_requests from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` style_requests.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of style_requests.
   */
  distinct?: Prisma.Style_requestScalarFieldEnum | Prisma.Style_requestScalarFieldEnum[]
}

/**
 * style_request findMany
 */
export type style_requestFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the style_request
   */
  select?: Prisma.style_requestSelect<ExtArgs> | null
  /**
   * Omit specific fields from the style_request
   */
  omit?: Prisma.style_requestOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.style_requestInclude<ExtArgs> | null
  /**
   * Filter, which style_requests to fetch.
   */
  where?: Prisma.style_requestWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of style_requests to fetch.
   */
  orderBy?: Prisma.style_requestOrderByWithRelationInput | Prisma.style_requestOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing style_requests.
   */
  cursor?: Prisma.style_requestWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` style_requests from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` style_requests.
   */
  skip?: number
  distinct?: Prisma.Style_requestScalarFieldEnum | Prisma.Style_requestScalarFieldEnum[]
}

/**
 * style_request create
 */
export type style_requestCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the style_request
   */
  select?: Prisma.style_requestSelect<ExtArgs> | null
  /**
   * Omit specific fields from the style_request
   */
  omit?: Prisma.style_requestOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.style_requestInclude<ExtArgs> | null
  /**
   * The data needed to create a style_request.
   */
  data: Prisma.XOR<Prisma.style_requestCreateInput, Prisma.style_requestUncheckedCreateInput>
}

/**
 * style_request createMany
 */
export type style_requestCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many style_requests.
   */
  data: Prisma.style_requestCreateManyInput | Prisma.style_requestCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * style_request createManyAndReturn
 */
export type style_requestCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the style_request
   */
  select?: Prisma.style_requestSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the style_request
   */
  omit?: Prisma.style_requestOmit<ExtArgs> | null
  /**
   * The data used to create many style_requests.
   */
  data: Prisma.style_requestCreateManyInput | Prisma.style_requestCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.style_requestIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * style_request update
 */
export type style_requestUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the style_request
   */
  select?: Prisma.style_requestSelect<ExtArgs> | null
  /**
   * Omit specific fields from the style_request
   */
  omit?: Prisma.style_requestOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.style_requestInclude<ExtArgs> | null
  /**
   * The data needed to update a style_request.
   */
  data: Prisma.XOR<Prisma.style_requestUpdateInput, Prisma.style_requestUncheckedUpdateInput>
  /**
   * Choose, which style_request to update.
   */
  where: Prisma.style_requestWhereUniqueInput
}

/**
 * style_request updateMany
 */
export type style_requestUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update style_requests.
   */
  data: Prisma.XOR<Prisma.style_requestUpdateManyMutationInput, Prisma.style_requestUncheckedUpdateManyInput>
  /**
   * Filter which style_requests to update
   */
  where?: Prisma.style_requestWhereInput
  /**
   * Limit how many style_requests to update.
   */
  limit?: number
}

/**
 * style_request updateManyAndReturn
 */
export type style_requestUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the style_request
   */
  select?: Prisma.style_requestSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the style_request
   */
  omit?: Prisma.style_requestOmit<ExtArgs> | null
  /**
   * The data used to update style_requests.
   */
  data: Prisma.XOR<Prisma.style_requestUpdateManyMutationInput, Prisma.style_requestUncheckedUpdateManyInput>
  /**
   * Filter which style_requests to update
   */
  where?: Prisma.style_requestWhereInput
  /**
   * Limit how many style_requests to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.style_requestIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * style_request upsert
 */
export type style_requestUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the style_request
   */
  select?: Prisma.style_requestSelect<ExtArgs> | null
  /**
   * Omit specific fields from the style_request
   */
  omit?: Prisma.style_requestOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.style_requestInclude<ExtArgs> | null
  /**
   * The filter to search for the style_request to update in case it exists.
   */
  where: Prisma.style_requestWhereUniqueInput
  /**
   * In case the style_request found by the `where` argument doesn't exist, create a new style_request with this data.
   */
  create: Prisma.XOR<Prisma.style_requestCreateInput, Prisma.style_requestUncheckedCreateInput>
  /**
   * In case the style_request was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.style_requestUpdateInput, Prisma.style_requestUncheckedUpdateInput>
}

/**
 * style_request delete
 */
export type style_requestDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the style_request
   */
  select?: Prisma.style_requestSelect<ExtArgs> | null
  /**
   * Omit specific fields from the style_request
   */
  omit?: Prisma.style_requestOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.style_requestInclude<ExtArgs> | null
  /**
   * Filter which style_request to delete.
   */
  where: Prisma.style_requestWhereUniqueInput
}

/**
 * style_request deleteMany
 */
export type style_requestDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which style_requests to delete
   */
  where?: Prisma.style_requestWhereInput
  /**
   * Limit how many style_requests to delete.
   */
  limit?: number
}

/**
 * style_request without action
 */
export type style_requestDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the style_request
   */
  select?: Prisma.style_requestSelect<ExtArgs> | null
  /**
   * Omit specific fields from the style_request
   */
  omit?: Prisma.style_requestOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.style_requestInclude<ExtArgs> | null
}
